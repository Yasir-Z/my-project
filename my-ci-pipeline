pipeline {
    agent any

    environment {
        VERSION = ''  // Declare environment variable globally
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Yasir-Z/my-project.git'
            }
        }
        
        stage('Setup virtual environment') {
            steps {
                sh '''
                    rm -rf venv
                    python3 -m venv venv
                    venv/bin/pip install --upgrade pip setuptools wheel
                '''
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'venv/bin/pip install -r requirements.txt'
            }
        }
        
        stage('Lint code with flake8') {
            steps {
                sh 'venv/bin/flake8 . --exclude=venv'
            }
        }
        
        stage('Code formatting with black') {
            steps {
                sh 'venv/bin/black --check . --exclude=venv'
            }
        }
        
        stage('Static analysis with pylint') {
            steps {
                sh 'venv/bin/pylint app.py'
            }
        }
        
        stage('Run unit test') {
            steps {
                sh 'venv/bin/pytest test_my_app.py'
            }
        }
        
        stage('Run integration test (QA test)') {
            steps {
                sh 'venv/bin/pytest test_integration.py'
            }
        }
        
        stage('Run coverage test') {
            steps {
                sh '''
                    venv/bin/pip install coverage
                    venv/bin/coverage run -m pytest
                    venv/bin/coverage report --fail-under=80
                '''
            }
        }
        
        stage('Security test with bandit') {
            steps {
                sh '''
                    venv/bin/pip install bandit
                    venv/bin/bandit app.py
                '''
            }
        }
        
        stage('Dependency Test') {
            steps {
                sh '''
                    venv/bin/pip install --upgrade pip-audit
                    venv/bin/pip-audit
                '''
            }
        }
        
        stage('Get version from git tag') {
            steps {
                script {
                    def version = sh(
                        script: 'git describe --tags --abbrev=0 || echo "v0.1.0"',
                        returnStdout: true
                    ).trim()
                    env.VERSION = version
                }
                echo "Git tag version is: ${env.VERSION}"
            }
        }
        
    }
}
