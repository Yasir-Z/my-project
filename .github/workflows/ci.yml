name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Set up python 3.10
        uses: actions/Setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pylint pytest

      - name: Lint code with flake8
        run: 
          flake8 . --exclude=venv

      - name: Check code formatting with balck
        run: black --check . --exclude=venv

      - name: Static analysis with pylint
        run: pylint app.py

      - name: Run unit test
        run: pytest test_my_app.py

      - name: Run integration test (QA test)
        run: pytest test_integration.py

      - name: Run coverage test
        run: |
          pip install coverage 
          coverage run -m pytest
          coverage report --fail-under=80  # fails if coverage < 80%

      - name: Secruity test with bandit
        run: |
          pip install bandit
          bandit app.py

      - name: Dependency Test
        run: |
          pip install pip-audit
        
      - name: Run pip-audit
        run: pip-audit


      - name: Get version from git tage 
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0 || echo "v0.1.0")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
    
      - name: Build docker image
        run: |
          docker build -t my-project:${{ env.VERSION }} .
 
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}          

      - name: Push docker image
        run: |
          docker tag my-project:${{ env.VERSION }} shepherd777/my-project:${{ env.VERSION }}
          docker push shepherd777/my-project:${{ env.VERSION }}




